vi provider

provider "aws" {
  region     = "ap-south-1"
  access_key = "AKIAZI2LIGDZW5VEJC6L"
  secret_key = "MfrtdB6ij31CQ6xKJmn2nCGH2q4+b4ImEVEtTRrb"
}

--------------------

vi server

resource "aws_instance" "example-1" {
  ami           = "ami-08ee1453725d19cdb"
  instance_type = "t2.micro"
  key_name      = "Prerana"
  count         = "1"
  tags = {
    Name = "task_1"
  }
  security_groups = [aws_security_group.example_sg.name]
  user_data       = file("data.sh")
}

-------------------------

vi sg

resource "aws_security_group" "example_sg" {

  name = "task"
  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "task"
  }
}

-----------------------------

data.sh

#!/bin/bash

yum update -y
yum install httpd -y
systemctl start httpd
systemctl enable httpd

---------------------------

public & private ip

output "public_ip" {
  value = aws_instance.example-1[0].public_ip
}

output "private_ip" {
  value = aws_instance.example-1[0].private_ip
}

---------------------------------

vpc

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/24"
  tags = {
    Name = "my_vpc"
  }
}

------------------------

subnet

resource "aws_subnet" "my_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.0.0/25"
  availability_zone       = "ap-south-1a" # Change as needed
  map_public_ip_on_launch = true
  tags = {
    Name = "my_subnet"
  }
}

----------------------------------

gateway

resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
  tags = {
    Name = "my_igw"
  }
}

-------------------------------

route table

resource "aws_route_table" "my_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }

  tags = {
    Name = "my_route_table"
  }
}

------------------------------

routetable associate with subnet

resource "aws_route_table_association" "my_route_table_association" {
  subnet_id      = aws_subnet.my_subnet.id
  route_table_id = aws_route_table.my_route_table.id
}
